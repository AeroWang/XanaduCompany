name: Build static files CI
on:
  push:
    branches:
      - 'deploy/vue2'
jobs:
  web-users-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: npm
          cache-dependency-path: web/package-lock.json
      - name: Get npm cache directory
        id: npm-cache
        run: echo "cacheDir=$(npm config get cache)" >> "$GITHUB_OUTPUT"
      - run: echo "${{ env.cacheDir }}"
      - name: Cache Node Dependencies
        id: cache-npm
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.cacheDir }}
          key: ${{runner.OS}}-npm-caches-${{ hashFiles('package-lock.json') }}
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: web-users-artifact
#          path: web/dist
#          if-no-files-found: warn
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-avzr --delete"
          SOURCE: "web/dist/"
          REMOTE_HOST: ${{ secrets.SERVER_IP }}
          REMOTE_PORT: ${{ secrets.SERVER_PORT }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          TARGET: ${{ secrets.SERVER_TARGET_USERS }}

  web-admin-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: admin
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: npm
          cache-dependency-path: admin/package-lock.json
      - name: Get npm cache directory
        id: npm-cache
        run: echo "cacheDir=$(npm config get cache)" >> "$GITHUB_OUTPUT"
      - run: echo "${{ env.cacheDir }}"
      - name: Cache Node Dependencies
        id: cache-npm
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{runner.OS}}-npm-caches-${{ hashFiles('package-lock.json') }}
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build

#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: web-admin-artifact
#          path: admin/dist
#          if-no-files-found: warn

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-avzr --delete"
          SOURCE: "admin/dist/"
          REMOTE_HOST: ${{ secrets.SERVER_IP }}
          REMOTE_PORT: ${{ secrets.SERVER_PORT }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          TARGET: ${{ secrets.SERVER_TARGET_ADMIN }}
